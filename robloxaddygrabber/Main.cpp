#define _CRT_SECURE_NO_WARNINGS
#include <windows.h>
#include <string>
#include <iostream>

using namespace std;

#define convert(a)(a + 0x400000 - (DWORD)GetModuleHandleA(0))

struct AOBPart {
	string name;
	const char* first;
	const char* second;
};

namespace AOB {
	bool Check(const BYTE* pd, const BYTE* aob, const char* mask)
	{
		for (; *mask; ++mask, ++pd, ++aob)
			if (*mask != '?' && *pd != *aob)
				return false;

		return (*mask) == NULL;
	}

	DWORD FindPattern(const char* aob, const char* mask)
	{
		for (DWORD ind = (DWORD)GetModuleHandle(0); ind <= 0xFFFFFFF; ++ind) {
			if (Check((BYTE*)ind, (BYTE*)aob, mask))
				return ind;
		}
		return 0x00000000;
	}
}

void main() {
	AOBPart aobs[] = { 
		AOBPart { "openstate", "\x55\x8B\xEC\x56\x57\x6A\x05\xFF\x75\x08\x8B\xF9\x33\xF6\xE8\x00\x00\x00\x00", "xxxxxxxxxxxxxxx????" },
		AOBPart { "retcheck", "\x55\x8B\xEC\x64\xA1\x00\x00\x00\x00\x6A\xFF\x68\x00\x00\x00\x00\x50\x64\x89\x25\x00\x00\x00\x00\x83\xEC\x0C\x57\x6A\x00", "xxxxx????xxx????xxxx????xxxxxx" },
		AOBPart { "lua_getfield", "\x55\x8B\xEC\x83\xEC\x10\x53\x56\x8B\x75\x08\x57\xFF\x75\x0C\x56\xE8\x00\x00\x00\x00\x8B\x55\x10\x83\xC4\x08\x8B\xCA\x8B\xF8\x8D\x59\x01\x8A\x01\x41\x84\xC0\x75\xF9\x2B\xCB\x51\x52\x56\xE8\x00\x00\x00\x00\xFF\x76\x10", "xxxxxxxxxxxxxxxxx????xxxxxxxxxxxxxxxxxxxxxxxxxx????xxx" },
		AOBPart { "lua_setfield", "\x55\x8B\xEC\x83\xEC\x10\x53\x56\x8B\x75\x08\x57\xFF\x75\x0C\x56\xE8\x00\x00\x00\x00\x8B\x55\x10\x83\xC4\x08\x8B\xCA\x8B\xF8\x8D\x59\x01\x8A\x01\x41\x84\xC0\x75\xF9\x2B\xCB\x51\x52\x56\xE8\x00\x00\x00\x00\x89\x45\xF0", "xxxxxxxxxxxxxxxxx????xxxxxxxxxxxxxxxxxxxxxxxxxx????xxx" },
		AOBPart { "lua_tolstring", "\x55\x8B\xEC\x56\x8B\x75\x08\x57\xFF\x75\x0C\x56\xE8\x00\x00\x00\x00\x8B\xF8", "xxxxxxxxxxxxx????xx" },
		AOBPart { "lua_settop", "\x55\x8B\xEC\x8B\x4D\x0C\x8B\x55\x08\x85\xC9\x78\x00\x8B\x42\x1C", "xxxxxxxxxxxx?xxx" },
		AOBPart { "lua_toboolean", "\x55\x8B\xEC\xFF\x75\x0C\xFF\x75\x08\xE8\x00\x00\x00\x00\x83\xC4\x08\x8B\x48\x08\x85\xC9", "xxxxxxxxxx????xxxxxxxx" },
		AOBPart { "lua_pushvalue", "\x55\x8B\xEC\x56\xFF\x75\x0C\x8B\x75\x08\x56\xE8\x00\x00\x00\x00\x8B\x56\x10\x83\xC4\x08", "xxxxxxxxxxxx????xxxxxx" },
		AOBPart { "lua_pushnumber", "\x55\x8B\xEC\x8B\x55\x08\x0F\x28\x15", "xxxxxxxxx" },
		AOBPart { "lua_pushstring", "\x55\x8B\xEC\x8B\x55\x0C\x85\xD2\x75\x0D", "xxxxxxxxxx" },
		AOBPart { "lua_pcall", "\x55\x8B\xEC\x8B\x45\x14\x83\xEC\x08\x53\x56\x57\x8B\x7D\x08\x85\xC0", "xxxxxxxxxxxxxxxxx" },
		AOBPart { "lua_pushnil", "\x55\x8B\xEC\x8B\x55\x08\x8B\x42\x10\xC7\x40", "xxxxxxxxxxx" },
		AOBPart { "lua_next", "\x55\x8B\xEC\x56\x8B\x75\x08\x57\xFF\x75\x0C\x56\xE8\x00\x00\x00\x00\x8B\x4E\x10", "xxxxxxxxxxxxx????xxx" },
		AOBPart { "lua_pushboolean", "\x55\x8B\xEC\x8B\x55\x08\x33\xC0\x39\x45\x0C", "xxxxxxxxxxx" },
		AOBPart { "lua_tonumber", "\x55\x8B\xEC\x83\xEC\x10\xFF\x75\x0C\xFF\x75\x08", "xxxxxxxxxxxx" },
		AOBPart { "lua_pushcclosure", "\x55\x8B\xEC\x56\x8B\x75\x08\x8B\x4E\x08\x8B\x44\x0E\x60", "xxxxxxxxxxxxxx" },
		AOBPart { "luaD_precall", "\x55\x8B\xEC\x51\x8B\x45\x0C\x53\x56\x8B\x75\x08\x83\x78\x08\x06", "xxxxxxxxxxxxxxxx" },
		AOBPart { "lua_checkstack", "\x55\x8B\xEC\x8B\x4D\x0C\x56\x8B\x75\x08\x57\xBF", "xxxxxxxxxxxx" },
		AOBPart { "lua_createtable", "\x55\x8B\xEC\x57\x8B\x7D\x08\x8B\x4F\x08\x8B\x44\x39\x60\x3B\x44\x39\x54\x72\x09\x57\xE8\x00\x00\x00\x00\x83\xC4\x04\x56\xFF\x75\x10\x8B\x77\x10\xFF\x75\x0C\x57\xE8\x00\x00\x00\x00\x89\x06\x83\xC4\x0C\xC7\x46\x00\x00\x00\x00\x00\x83\x47\x10\x10\xA1\x00\x00\x00\x00\x8B\x4D\x04\x2B\xC8\x5E\x3B\x0D\x00\x00\x00\x00\x72\x39\xA1\x00\x00\x00\x00\x8B\x4D\x04\x2B\xC8\x3B\x0D\x00\x00\x00\x00\x72\x27\xA1\x00\x00\x00\x00\x81\x0D\x00\x00\x00\x00\x00\x00\x00\x00\x57\xA3\x00\x00\x00\x00\xC7\x05\x00\x00\x00\x00\x00\x00\x00\x00\xE8\x00\x00\x00\x00\x83\xC4\x04\x5F\x5D\xC3", "xxxxxxxxxxxxxxxxxxxxxx????xxxxxxxxxxxxxxx????xxxxxxx?????xxxxx????xxxxxxxx????xxx????xxxxxxx????xxx????xx????????xx????xx????????x????xxxxxx" },
		AOBPart { "lua_insert", "\x55\x8B\xEC\x53\x8B\x5D\x08\x56\x57\xFF\x75\x0C\x53", "xxxxxxxxxxxxx" },
		AOBPart { "lua_newthread", "\x55\x8B\xEC\x6A\xFF\x68\x00\x00\x00\x00\x64\xA1\x00\x00\x00\x00\x50\x64\x89\x25\x00\x00\x00\x00\x51\x56\x8B\x75\x08\x57\x8B\x4E\x08", "xxxxxx????xx????xxxx????xxxxxxxxx" },
		AOBPart { "lua_newuserdata", "\x55\x8B\xEC\x56\x8B\x75\x08\x57\x8B\x4E\x08\x8B\x44\x31\x60\x3B\x44\x31\x54\x72\x09\x56\xE8\x00\x00\x00\x00\x83\xC4\x04\x8B\x46\x0C", "xxxxxxxxxxxxxxxxxxxxxxx????xxxxxx" },
		AOBPart { "lua_pushfstring", "\x55\x8B\xEC\x56\x8B\x75\x08\x57\x8B\x4E\x08\x8B\x44\x31\x60\x3B\x44\x31\x54\x72\x09\x56\xE8\x00\x00\x00\x00\x83\xC4\x04\x8D\x45\x10", "xxxxxxxxxxxxxxxxxxxxxxx????xxxxxx" },
		AOBPart { "lua_pushthread", "\x55\x8B\xEC\x56\x8B\x75\x08\x8B\x46\x10", "xxxxxxxxxx" },
		AOBPart { "lua_rawgeti", "\x55\x8B\xEC\x56\xFF\x75\x0C\x8B\x75\x08\x56\xE8\x00\x00\x00\x00\xFF\x75\x10", "xxxxxxxxxxxx????xxx" },
		AOBPart { "lua_rawseti", "\x55\x8B\xEC\x83\xEC\x14\x56\xFF\x75\x0C", "xxxxxxxxxx" },
		AOBPart { "lua_rawset", "\x55\x8B\xEC\x83\xEC\x08\x56\x8B\x75\x08\x57\xFF\x75\x0C", "xxxxxxxxxxxxxx" },
		AOBPart { "lua_remove", "\x55\x8B\xEC\x56\xFF\x75\x0C\x8B\x75\x08\x56\xE8\x00\x00\x00\x00\x83\xC4\x08\x8D\x48\x10", "xxxxxxxxxxxx????xxxxxx" },
		AOBPart { "lua_setfenv", "\x55\x8B\xEC\x56\x8B\x75\x08\x57\xFF\x75\x0C\xBF", "xxxxxxxxxxxx" },
		AOBPart { "lua_setmetatable", "\x55\x8B\xEC\x53\x56\x57\xFF\x75\x0C\x8B\x7D\x08", "xxxxxxxxxxxx" },
		AOBPart { "lua_getmetatable", "\x55\x8B\xEC\x56\x57\xFF\x75\x0C\x8B\x7D\x08\x57\xE8\x00\x00\x00\x00\x83\xC4\x08", "xxxxxxxxxxxxx????xxx" },
		AOBPart { "lua_xmove", "\x55\x8B\xEC\x56\x8B\x75\x0C\x57\x8B\x7D\x08\x3B\xFE", "xxxxxxxxxxxxx" },
		AOBPart { "lua_close", "\x55\x8B\xEC\x64\xA1\x00\x00\x00\x00\x6A\xFF\x68\x00\x00\x00\x00\x50\x64\x89\x25\x00\x00\x00\x00\x56\x57\x8B\x71\x04", "xxxxx????xxx????xxxx????xxxxx" }
	};

	for (AOBPart aob : aobs) {
		cout << aob.name << " - 0x" << std::hex << convert(AOB::FindPattern(aob.first, aob.second)) << endl;
	}
}

void CreateConsole() {
	AllocConsole();
	freopen("CONOUT$", "w", stdout);
	freopen("CONIN$", "r", stdin);
	DWORD OldPerm, OldPermMsg, Base;


	VirtualProtect(&FreeConsole, 1, PAGE_EXECUTE_READWRITE, &OldPerm);
	VirtualProtect(&MessageBoxA, 5, PAGE_EXECUTE_READWRITE, &OldPerm);
	*(BYTE*)(&FreeConsole) = 0xC3;
	SetConsoleTitle("roblox addy grabber");
	main();
}

int __stdcall DllMain(HMODULE DLL, DWORD Reason, void* Useless) {
	if (Reason == 1) {
		CreateThread(0, 0, (LPTHREAD_START_ROUTINE)CreateConsole, 0, 0, 0);
	}
	return TRUE;
}